name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: inkbook
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - name: Copy example env for Docker
        run: cp .env.example .env.docker
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:${{ github.sha }} .
      - name: Run linters in container
        run: docker run --env-file .env.docker --network host ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest flake8 .
      - name: Run unit tests in container
        run: docker run --env-file .env.docker --network host ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest pytest
      # TODO: Add integration tests here
      # - name: Run integration tests in container
      #   run: docker run --env-file .env.docker --network host ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest pytest tests/integration
      # TODO: Add end-to-end (e2e) tests here
      # - name: Run e2e tests in container
      #   run: docker run --env-file .env.docker --network host ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest pytest tests/e2e
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/inkbook-api:${{ github.sha }}